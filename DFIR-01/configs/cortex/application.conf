# Cortex 3.1.10 Configuration
include "application"

# Configuration de base
search {
  host = ["redis:6379"]
  password = ${?CORTEX_DB_REDIS_PASSWORD}
  index = "cortex"
}

# Configuration HTTP
http {
  address = "0.0.0.0"
  port = 9001
}

# Configuration Play Framework
play {
  http {
    secret.key = ${?CORTEX_SECRET}
    parser.maxDiskBuffer = 50MB
  }
  
  filters {
    enabled += "play.filters.cors.CORSFilter"
    cors {
      allowedOrigins = ["http://localhost:9000", "http://thehive:9000", "http://localhost:3001", "http://shuffle:3001"]
      allowedHttpMethods = ["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
      allowedHttpHeaders = ["Accept", "Authorization", "Content-Type", "X-Requested-With", "X-API-Key"]
    }
  }
}

# Configuration de l'authentification
auth {
  provider = ["local"]
  
  local {
    defaultUserDomain = "cortex.local"
  }
}

# Configuration des analyseurs
analyzer {
  urls = [
    "https://download.thehive-project.org/analyzers.json"
  ]
  
  # Configuration Docker pour les analyseurs
  runner = [
    {
      name = "docker"
      url = "unix:///var/run/docker.sock"
      
      # Configuration par défaut des conteneurs
      config {
        # Limitation des ressources
        check_tlp = false
        check_pap = false
        max_tlp = 3
        max_pap = 3
        
        # Configuration réseau
        auto_extract_artifacts = false
        
        # Timeout des jobs
        job_timeout = 30 minutes
        
        # Configuration Docker
        docker {
          # Images autorisées
          allow_host_network = false
          allow_privileged = false
          
          # Limites de ressources
          memory = 512m
          cpu_shares = 512
          
          # Volumes montés
          volumes = [
            "/tmp/cortex-jobs:/tmp/cortex-jobs:rw"
          ]
        }
      }
    }
  ]
}

# Configuration des workers pré-configurés
job {
  runner = "docker"
  
  # Configuration globale des jobs
  timeout = 30 minutes
  
  # Répertoire de travail
  directory = "/tmp/cortex-jobs"
}

# Configuration des services
services {
  LocalAuthSrv {
    enabled = true
  }
}

# Configuration des organisations
organization {
  defaults = ["cortex"]
}

# Configuration de sécurité
security {
  authenticationByApiKey = true
}

# Configuration spécifique des analyseurs
# Analyseurs intégrés pré-configurés
analyzer.config {
  # Analyseur File_Info
  "File_Info_1_0" {
    # Pas de configuration spéciale requise
  }
  
  # Analyseur Yara
  "Yara_2_0" {
    rules_path = "/opt/cortex/modules/yara-rules"
  }
  
  # Analyseur VirusTotal (nécessite une clé API)
  "VirusTotal_GetReport_3_0" {
    key = "YOUR_VIRUSTOTAL_API_KEY"
    polling_interval = 60
  }
  
  # Analyseur ClamAV
  "ClamAV_Scan_1_0" {
    host = "clamav"
    port = 3310
  }
  
  # Analyseur MaxMind GeoIP
  "MaxMind_GeoIP_4_0" {
    path = "/opt/cortex/modules/geoip/GeoLite2-City.mmdb"
  }
  
  # Analyseur Abuse Finder
  "Abuse_Finder_3_0" {
    # Configuration par défaut
  }
  
  # Analyseur URLVoid
  "URLVoid_1_0" {
    key = "YOUR_URLVOID_API_KEY"
  }
  
  # Analyseur Shodan
  "Shodan_DNSResolve_1_0" {
    key = "YOUR_SHODAN_API_KEY"
  }
  
  # Analyseur OTX AlienVault
  "OTXQuery_2_0" {
    key = "YOUR_OTX_API_KEY"
  }
}

# Configuration des responders
responder {
  urls = [
    "https://download.thehive-project.org/responders.json"
  ]
  
  # Configuration des responders pré-configurés
  config {
    # TheHive Case Creation
    "TheHive_Case_1_0" {
      url = "http://thehive:9000"
      key = ${?TH_CORTEX_KEY}
    }
    
    # MISP Event Creation
    "MISP_2_1" {
      url = "http://misp:80"
      key = "YOUR_MISP_API_KEY"
      verifycert = false
    }
  }
}

# Configuration des logs
logger {
  application = INFO
  play = INFO
  akka = WARN
  org.thp = INFO
}